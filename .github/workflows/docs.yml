# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Docs

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Build opendal docs ----------------------------------------------
      - name: Checkout java env
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          cache-key: "-services-all"

      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --lib --no-deps --all-features -p opendal
        env:
          LD_LIBRARY_PATH: ${{ env.JAVA_HOME }}/lib/server:${{ env.LD_LIBRARY_PATH }}

      - name: Copy docs into build
        run: |
          cp -r ./target/doc ./website/static/docs/rust

      # Set node.js environment -----------------------------------------
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # Build bindings/nodejs docs --------------------------------------
      - name: Corepack
        working-directory: bindings/nodejs
        run: corepack enable

      - name: Install dependencies
        working-directory: bindings/nodejs
        run: yarn install

      - name: Build bindings/nodejs Docs
        working-directory: bindings/nodejs
        run: yarn docs

      - name: Copy docs into build
        run: |
          cp -r ./bindings/nodejs/docs ./website/static/docs/nodejs

      # Setup python environment ----------------------------------------
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Build bindings/python docs --------------------------------------
      - name: Install dependencies
        working-directory: bindings/python
        run: |
          set -e
          python -m pip install -e .
          python -m pip install pdoc

      - name: Build bindings/python Docs
        working-directory: bindings/python
        run: pdoc --output-dir ./docs opendal

      - name: Copy docs into build
        run: |
          cp -r ./bindings/python/docs ./website/static/docs/python

      # Build website ---------------------------------------------------
      - name: Install Dependencies
        working-directory: website
        run: |
          yarn install

      - name: Build
        working-directory: website
        run: |
          yarn build

      # Start deploy --------------------------------------------------
      - name: Copy asf file
        run:  cp .asf.yaml ./website/build/.asf.yaml

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3.9.2
        if: github.event_name == 'push' && github.ref_name == 'main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: website/build
          publish_branch: gh-pages
